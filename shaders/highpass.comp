#version 450

layout (local_size_x=16, local_size_y=16) in;

layout (binding = 0, r11f_g11f_b10f) readonly uniform image2DMS inputImage;
layout (binding = 1, r11f_g11f_b10f) writeonly uniform image2D outputImage;

void main()
{
	const int SAMPLES = imageSamples(inputImage);
	const float SAMPLES_MUL = 1.0/float(SAMPLES);

	ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
	vec3 sum = vec3(0);
	for (int i=0;i<SAMPLES;++i)
	{
		sum += imageLoad(inputImage, coord, i).rgb;
	}
	const vec3 value = sum*SAMPLES_MUL;
	const float lum = dot(vec3(0.2126, 0.7152, 0.0722), value);
	const vec3 finalColor = (lum>1.0)?value:vec3(0);
	imageStore(outputImage, coord, vec4(finalColor,1.0));
}